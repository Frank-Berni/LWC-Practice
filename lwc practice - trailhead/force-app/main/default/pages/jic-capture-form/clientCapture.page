<apex:page standardController="Account" extensions="clientCaptureResultsController" docType="html-5.0">

    <!-- 
    Currently this page takes some of the fields from the searched account from previous page
    The input fields will insert a new Person Account, relies on Trigger to merge with existing Person Account
    File uploads are done directly to the Person Account, doesn't require trigger
    -->
    <apex:form>
        <!-- Styling purposes -->
        <!-- <style>
            #employSpouse {
                text-indent: 215px;
            }
        </style> -->

        <!-- Primary Account Details Section-->
        <apex:pageBlock title="Person Account Details" mode="edit">

            <!-- Submit Button that inserts the Account -->
            <div style="padding: 10px; text-align: center;" >   
                <apex:commandButton value="Submit" action="{!insertAccounts}" />
            </div> 

            <!-- Holds Information from Existing Account and Displays Validation Rules -->
            <apex:pageBlockSection title="On File">
                 <!-- Shows the Email on file collected from Client -->
                <apex:outputField label="Primary Email" value="{!accs[0].Client_1_Email__c}"/>
                <!-- Renders when Both Emails don't match -->
                <apex:outputtext style="color:red" value="Emails do not match" rendered="{!misMatchEmail}"/>
            </apex:pageBlockSection>

            <!-- Where the Primary Account Holder can enter their information  -->
            <apex:pageBlockSection title="Primary Account Details">
                <apex:inputField value="{!account.Name}" />
                <!-- Email field is required to allow the trigger on the back end to update the existing account -->
                <apex:inputField required="true" label="Confirm Email" value="{!account.Client_1_Email__c}" />
                <apex:inputField label="First Name" value="{!account.Client_1_First_Name__c}" />
                <!-- We need to put middle initial field here. Didn't make one for the playground yet -->
                <apex:inputField label="Last Name" value="{!account.Client_1_Last_Name__c}" />
                <apex:inputField label="DOB" value="{!account.Client_1_DOB__c}" />
                <apex:inputField label="SSN" value="{!account.Client_1_SSN__c}" />
                <apex:inputField label="Home Phone" value="{!account.Client_1_Home_Phone__c}" />
                <apex:inputField label="Cell Phone" value="{!account.Client_1_Cell_Phone__c}" />
            </apex:pageBlockSection>

        </apex:pageBlock>
        <!-- End Primary Account Details Section-->

        <!-- Employment Section for Primary Account Holder -->
        <apex:pageBlock id="employmentP">

            <!-- keeps the styling matched with the input fields -->
            <div style="text-indent: 215px;">
                <!-- The class I got from inspecting the VF page. Keeps the labeling consistent -->
                <p class="labelCol vfLabelColTextWrap " style="float: left">
                    Employment Status &nbsp; &nbsp;
                </p>
                <!-- This controls the Employer Questions to render based on value of picklist -->
                <apex:actionRegion>
                    <br/>
                    <apex:inputField label="Employment Status" value="{!account.Client_1_Employment_Status__c}">
                        <apex:actionSupport event="onchange" reRender="employmentP" status="refresh1">
                            <apex:actionStatus id="refresh1">
                                <apex:facet name="start"/>
                                <apex:facet name="stop"/>
                            </apex:actionStatus>
                        </apex:actionSupport>
                    </apex:inputField>
                </apex:actionRegion>
            </div>
            <!-- Renders when Employed is selected in the picklist -->
            <apex:pageBlockSection rendered="{!account.Client_1_Employment_Status__c == 'Employed'}" >
                <!-- Further questions about Employment  -->
                <div>
                    <apex:outputtext />
                    <apex:inputField label="Company Name" value="{!account.Client_1_Company_Name__c}" />
                    <apex:inputField label="Company Location" value="{!account.Client_1_Location__c}" />
                </div>
            </apex:pageBlockSection>

        </apex:pageBlock>
        <!-- End Employment Section for Primary Account Holder -->

        <!-- Address Information Section -->
        <apex:pageBlock title="Address Information">

            <apex:pageBlockSection >
                <apex:inputField value="{!account.Primary_Street__c}" />
                <apex:inputField label="Secondary Street" value="{!account.Other_Street__c}" />
                <apex:inputField value="{!account.Primary_City__c}" />
                <apex:inputField label="Secondary City" value="{!account.Other_City__c}" />
                <apex:inputField value="{!account.Primary_State__c}" />
                <apex:inputField label="Secondary State" value="{!account.Other_State__c}" />
                <apex:inputField value="{!account.Primary_Zip__c}" />
                <apex:inputField label="Secondary Zip" value="{!account.Other_Zip__c}" />
                <apex:inputField value="{!account.Primary_Country__c}" />
                <apex:inputField label="Secondary Country" value="{!account.Other_Country__c}" />
            </apex:pageBlockSection>

        </apex:pageBlock>
        <!-- End Address Information Section -->

        <!-- Spouse Information Section -->
        <apex:pageBlock id="spouseSection">
            
            <!-- keeps the styling matched with the input fields -->
            <div style="text-indent: 255px;">
                <!-- The class I got from inspecting the VF page. Keeps the labeling consistent -->
                <p class="labelCol vfLabelColTextWrap " style="float: left">
                    Marital Status &nbsp; &nbsp;
                </p>
                <!-- This controls the Spouse Section to render based on value of picklist -->
                <apex:actionRegion>
                    <br/> <!--The spacing I needed to get it lined up! -->
                    <apex:inputField label="Marital Status" value="{!account.Client_1_Marital_Status__c}">
                        <apex:actionSupport event="onchange" reRender="spouseSection" status="refreshStatus">
                            <apex:actionStatus id="refreshStatus">
                                <apex:facet name="start"/>
                                <apex:facet name="stop"/>
                            </apex:actionStatus>
                        </apex:actionSupport>
                    </apex:inputField>
                </apex:actionRegion>
            </div>

                
            <!-- Running into a weird formatting issue where the picklist stays stuck in one position and doesn't accept 
            any styling -->
            <!-- This controls the Employer Questions to render based on value of picklist -->
            <div style="text-indent: 255px;">
                <!-- The class I got from inspecting the VF page. Keeps the labeling consistent -->
                <p class="labelCol vfLabelColTextWrap " style="float: left">
                    <apex:outputText value="What is your Spouse's Employment Status?" rendered="{!account.Client_1_Marital_Status__c == 'Married'}" />  
                    <!-- &nbsp; &nbsp; -->
                </p>
            </div>
            <br/>
            <apex:actionRegion rendered="{!account.Client_1_Marital_Status__c == 'Married'}" id="employSpouse">
                <apex:inputField label="Employment Status" value="{!account.Client_2_Employment_Status__c}">
                    <apex:actionSupport event="onchange" reRender="spouseSection" status="refresh3">
                        <apex:actionStatus id="refresh3">
                            <apex:facet name="start"/>
                            <apex:facet name="stop"/>
                        </apex:actionStatus>
                    </apex:actionSupport>
                </apex:inputField>
            </apex:actionRegion>
            

            <!-- Renders when Married is selected in the picklist -->
            <apex:pageBlockSection rendered="{!account.Client_1_Marital_Status__c == 'Married'}" >
                <br/>
                <!-- Workaround to weird color issue when blockSection rerenders. Font Color turns white for some reason -->
                <div style="text-indent: 255px; font-size: 15px;" >
                    <h1>
                        Spouse Details
                    </h1>
                </div>
                <br/>
                <div>
                    <apex:outputText /> <!-- blank output text field to align the input fields properly-->
                    <apex:inputField label="First Name" value="{!account.Client_2_First_Name__c}" />
                    <!-- needs middle name field -->
                    <apex:inputField label="Last Name" value="{!account.Client_2_Last_Name__c}" />
                    <!-- possibly maiden name field? -->
                    <apex:inputField label="DOB" value="{!account.Client_2_DOB__c}" />
                    <apex:inputField label="SSN" value="{!account.Client_2_SSN__c}" />
                    <apex:inputField label="Home Phone" value="{!account.Client_2_Home_Phone__c}" />
                    <apex:inputField label="Cell Phone" value="{!account.Client_2_Cell_Phone__c}" />
                    <apex:inputField label="Email" value="{!account.Client_2_Email__c}" />
                    <apex:outputText />
                    <!-- The class I got from inspecting the VF page. Keeps the labeling consistent
                    <p class="labelCol vfLabelColTextWrap " style="text-indent: 215px;">
                        Employment&nbsp;Status
                    </p> -->
                </div>  
            </apex:pageBlockSection>

                <!-- TODO : Wrap these input fields into their own pageBlockSection -->
                <!-- These two fields render when Employed is selected in picklist  -->
            <apex:pageBlockSection rendered="{!account.Client_2_Employment_Status__c == 'Employed'}">
                <apex:inputField label="Company Name"  value="{!account.Client_2_Company_Name__c}" />
                <apex:inputField label="Company Location" value="{!account.Client_2_Location__c}" />   
            </apex:pageBlockSection>

        </apex:pageBlock>
        <!-- End Spouse Information Section -->

        <!-- File Upload where it stores files onto the existing Person Account -->   
        <apex:pageBlock title="Would you like to add any attachments to your Account?">

            <apex:pageBlockSection columns="1">
                <!-- Fills in the fields for the Attachment object -->
                <apex:inputfile value="{!myfile.body}" filename="{!myfile.Name}" />
                <!-- Gives feedback that the user uploaded a file -->
                <apex:outputtext value="Files uploaded: {!filesUploaded}"/>
                <!-- Uploads the attachment to the Person Account -->
                <apex:commandButton value="Upload" action="{!Savedoc}"/>
            </apex:pageBlockSection>

        </apex:pageBlock>
        <!-- End File Upload Section -->

    </apex:form>
</apex:page>